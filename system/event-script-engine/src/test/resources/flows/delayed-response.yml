flow:
  id: 'delayed-response-test'
  description: 'Test a flow with delayed response'
  ttl: 10s

first.task: 'sequential.one'

tasks:
  - input:
      - 'input.path_parameter.user -> user'
      - 'input.query.seq -> sequence'
    process: 'sequential.one'
    output:
      - 'result -> model.pojo'
    description: 'Pass a pojo to another task'
    execution: sequential
    # setting 200 ms for the delay to be observed in application log
    delay: '200 ms'
    next:
      - 'sequential.two'

  # model.delay does not exist at this point, and it will be ignored
  - name: 'sequential.two'
    input:
      - 'model.pojo -> *'
      # intentionally not setting model.delay to create an error condition for delay processing
#      - 'int(100) -> model.delay'
    process: 'no.op'
    output: []
    description: 'Return result'
    delay: model.delay
    execution: sequential
    next:
      - 'sequential.three'

  # model.delay is captured from the HTTP input query parameter 'query'
  - name: 'sequential.three'
    input:
      - 'model.pojo -> *'
      - 'input.query.delay -> model.delay'
    process: 'no.op'
    output:
      - 'text(application/json) -> output.header.content-type'
      - 'result -> output.body'
    description: 'Return result'
    execution: end
