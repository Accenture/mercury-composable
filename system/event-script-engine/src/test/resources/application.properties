#
# Application name, version and description are displayed under the management endpoint "/info".
#
# When running under IDE, spring.application.name and info.app.version will be used.
# Otherwise, the application name and version are retrieved from the packaged JAR file.
#
application.name=event-script-tests
info.app.version=1.0.0
info.app.description=Event Script Tests
#
server.port=8102
rest.automation=true
#
# DO NOT CHANGE the URL path for static content
#
spring.mvc.static-path-pattern=/**
#
# Where to load the static files:
#
# For embedded resources --> classpath:/public/
# For files in local file system --> file:/opt/html/
#
# Please add welcome page as "index.html"
#
spring.web.resources.static-locations=classpath:/public/
#
# Since the ServiceGateway servlet is used as the API entry point,
# it is using the "/api" path. Therefore, we will command out
# the default JAX-RS path to let REST automation overrides it.
#
#jax.rs.application.path=/api
#
# scan these packages for JAX-RS endpoints, WebServlets and Spring components
# (use command separated list if more than one package)
#
web.component.scan=com.accenture

#
# websocket configuration
#
#websocket.idle.timeout=60

#
# cloud.connector= none | kafka | ...
#
cloud.connector=none

#
# advanced features
#
snake.case.serialization=true

#
# REST automation configuration files
# (the system will merge config files if more than one is provided as a comma separated list)
#
yaml.rest.automation=classpath:/rest.yaml
#
# Flow automation configuration files
# (the system will merge config files if more than one is provided as a comma separated list)
#
yaml.flow.automation=classpath:/flows.yaml, classpath:/more-flows.yaml, classpath:/not-found.yaml
#
# Optional event-over-http target maps
#
yaml.event.over.http=classpath:/event-over-http.yaml

#
# application ID for external state machine in unit test
#
app.id=A12