flow:
  id: 'parser-test-24'
#  description: 'this description is intentionally to be commented out'
  ttl: 10s

first.task: 'greeting.test.alias'

tasks:
  - name: 'greeting.test.alias'
    input:
      - 'input.path_parameter.user -> user'
      - 'input.query.ex -> exception'
      - 'text(hello world) -> greeting'
      - 'text(${PATH}) -> path'
      - 'long(12345) -> long_number'
      - 'float(12.345) -> float_number'
      - 'double(12.345) -> double_number'
      - 'boolean(true) -> boolean_value'
      - 'map(direction=right, test=message) -> model.map'
      - 'text(demo_token) -> model.access_token'
      - 'input.header -> header'
      - 'input.path_parameter.user -> header.user'
      - 'text(ok) -> header.demo'
      - 'model.trace -> trace_id'
      - 'model.flow -> flow_id'
    process: 'greeting.test'
    output:
      - 'text(application/json) -> output.header.content-type'
      - 'result -> output.body'
      - 'map(test.map) -> output.body.map1'
      - 'model.map -> output.body.map2'
      - 'map(test.map3) -> output.body.map3'
      # invalid HTTP status will be rejected
      - 'text(20000) -> output.status'
      - 'status -> output.status'
      # mapping rejected because "output header" expects a map instead of text
      - 'text(invalid) -> output.header'
      - 'header -> output.header'
      - 'header.demo -> output.header.x-demo'
      - 'text(${application.name}) -> output.body.name'
    description: 'Hello World'
    execution: end
    exception: 'v1.hello.exception'

  - input:
      - 'error.code -> status'
      - 'error.message -> message'
      - 'error.stack -> stack'
    process: 'v1.hello.exception'
    output:
      - 'result.status -> output.status'
      - 'result -> output.body'
    description: 'Just a demo exception handler'
    execution: end
