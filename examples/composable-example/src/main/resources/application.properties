#
# Application name, version and description are displayed under the management endpoint "/info".
#
# When running under IDE, spring.application.name and info.app.version will be used.
# Otherwise, the application name and version are retrieved from the packaged JAR file.
#
application.name=composable-example
info.app.version=1.0.0
info.app.description=Composable example using Event Script
#
# "rest.server.port" is the server port when running locally
# This value may be mapped to port 80 when deployed to cloud
#
# If this parameter is not available, it will fall back to use "server.port".
# This additional parameter allows rest-automation library to co-exist with the "rest-spring" library
#
# When used with rest-spring library, your application would use 2 ports:
# one for rest-automation ("rest.server.port") and the other for rest-spring ("server.port")
# In combined mode, please use "spring.application.name" instead of "application.name"
#
rest.server.port=8100
rest.automation=true
# optional server.port if you have added rest-spring-3 library in pom.xml
server.port=8085
#
# log.format = text | compact | json
# text and json are for human readers
# compact is json without pretty print. It is for log analytics consumption.
#
log.format=text
#
# Where to load the static files:
# For embedded resources --> classpath:/public
# For files in local file system --> file:/opt/html
#
# Default welcome page is "index.html"
#
spring.web.resources.static-locations=classpath:/public

web.component.scan=com.accenture

#
# websocket configuration
#
#websocket.idle.timeout=60

#
# cloud.connector = none | kafka | ...
# cloud.services = comma separated list of optional cloud services
#
cloud.connector=none
#cloud.services=some.other.cloud.services

#
# health admin endpoint dependencies
#
mandatory.health.dependencies=demo.health
#mandatory.health.dependencies=cloud.connector.health
#optional.health.dependencies=cloud.connector.health

#
# advanced features
#
snake.case.serialization=true

#
# environment and system properties to be exposed to the "/env" admin endpoint
#
#show.env.variables=USER, TEST
show.application.properties=server.port, cloud.connector

#
# route substitution
# comma separated list. The format of each entry is a:b where b replaces a
#
#route.substitution=hello.test:hello.world
#application.feature.route.substitution=true

#
# REST automation configuration files
# (the system will merge config files if more than one is provided as a comma separated list)
#
yaml.rest.automation=file:/tmp/config/rest.yaml, classpath:/rest.yaml
#
# Event script configuration file location
# (Supports only one entry)
#
yaml.flow.automation=classpath:/flows.yaml
#
# If api.origin is present, it will override "Access-Control-Allow-Origin" in the CORS headers
# Access-Control-Allow-Origin must be "*" or domain name starting with "http://" or "https://"
# The use of wildcard "*" should only be allowed for non-prod environments.
#
api.origin=*

#
# TraceId Http header
# Command separated traceID labels in HTTP headers
# All the labels will be accepted as incoming traceID.
# default is X-Trace-Id
#
trace.http.header=X-Correlation-Id, X-Trace-Id
