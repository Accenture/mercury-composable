#
# DO NOT CHANGE - these will be used by unit tests
#
application.name=platform-core
server.port=8585
rest.automation=true
#
# log.format = text | compact | json
# text and json are for human readers
# compact is json without pretty print. It is for log analytics consumption.
#
log.format=text
#
# This parameter is used to inform an application instance that it is running inside a container.
#
# When running.in.cloud=false, the application will create a sub-folder with the application-name and origin-ID.
# When running.in.cloud=true, the application will use the transient.data.store.folder directly.
#
# DO NOT set running.in.cloud=true if the application is running with other application instances in the same
# developer's PC.
#
transient.data.store=/tmp/reactive
running.in.cloud=false

#
# websocket configuration
#
#websocket.idle.timeout=60

#
# for web and cloud component registration
#
web.component.scan=org.platformlambda

#
# cloud.connector =  none | kafka | ...
#
cloud.services=mock.cloud.service
cloud.connector=mock.cloud
mandatory.health.dependencies=cloud.connector.health

#
# advanced features
#
snake.case.serialization=true
pom.properties.location=/META-INF/maven/*/*/pom.properties

#
# route substitution
#
application.feature.route.substitution=true
# you can define a route substitution table in a yaml file
yaml.route.substitution=classpath:/route-substitution.yaml
# or enter them in a comma separated list. The format of each entry is a:b where b replaces a
#route.substitution=hello.test:hello.world
yaml.preload.override=classpath:/not-found.yaml, classpath:/preload-override.yaml, classpath:/preload-more.yaml

trace.http.header=X-Correlation-Id, X-Trace-Id

# Two levels of loops
looping.test.1=${looping.test.2}
looping.test.2=${looping.test.1:1000}

looping.test.3=hello ${looping.test.4}
looping.test.4=${looping.test.3:1000}

# one level of loop
recursive.key=${recursive.key}

#
# multicast configuration file
# may be provided in classpath or file location
# e.g.
# classpath:/multicast.yaml
# file:/tmp/config/multicast.yaml
#
yaml.multicast=classpath:/multicast.yaml

#
# Optional event-over-http target maps
#
yaml.event.over.http=classpath:/event-over-http.yaml

#
# Sample journal config file
# --------------------------
#
# journal:
#   - "my.function.1"
#   - "my.function.2"
#
yaml.journal=classpath:/journal.yaml

protect.info.endpoints=true

spring.profiles.active=test
# the test.parameter will be overwritten by "active profile" - application-test.properties
test.parameter=to-be-updated

#
# REST automation configuration files
# (the system will merge config files if more than one is provided as a comma separated list)
#
yaml.rest.automation=classpath:/nothing.yaml, classpath:/rest.yaml, classpath:/duplicated-endpoint.yaml, classpath:/event-api.yaml
